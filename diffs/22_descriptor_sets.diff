diff --git a/../steps/21_descriptor_layout/main.go b/../steps/22_descriptor_sets/main.go
index 7bd6a0b..2f38dae 100644
--- a/../steps/21_descriptor_layout/main.go
+++ b/../steps/22_descriptor_sets/main.go
@@ -119,6 +119,8 @@ type HelloTriangleApplication struct {
 	swapchainFramebuffers []core1_0.Framebuffer
 
 	renderPass          core1_0.RenderPass
+	descriptorPool      core1_0.DescriptorPool
+	descriptorSets      []core1_0.DescriptorSet
 	descriptorSetLayout core1_0.DescriptorSetLayout
 	pipelineLayout      core1_0.PipelineLayout
 	graphicsPipeline    core1_0.Pipeline
@@ -252,6 +254,16 @@ func (app *HelloTriangleApplication) initVulkan() error {
 		return err
 	}
 
+	err = app.createDescriptorPool()
+	if err != nil {
+		return err
+	}
+
+	err = app.createDescriptorSets()
+	if err != nil {
+		return err
+	}
+
 	err = app.createCommandBuffers()
 	if err != nil {
 		return err
@@ -343,6 +355,8 @@ func (app *HelloTriangleApplication) cleanupSwapChain() {
 		app.uniformBuffersMemory[i].Free(nil)
 	}
 	app.uniformBuffersMemory = app.uniformBuffersMemory[:0]
+
+	app.descriptorPool.Destroy(nil)
 }
 
 func (app *HelloTriangleApplication) cleanup() {
@@ -452,6 +466,16 @@ func (app *HelloTriangleApplication) recreateSwapChain() error {
 		return err
 	}
 
+	err = app.createDescriptorPool()
+	if err != nil {
+		return err
+	}
+
+	err = app.createDescriptorSets()
+	if err != nil {
+		return err
+	}
+
 	err = app.createCommandBuffers()
 	if err != nil {
 		return err
@@ -882,7 +906,7 @@ func (app *HelloTriangleApplication) createGraphicsPipeline() error {
 
 		PolygonMode: core1_0.PolygonModeFill,
 		CullMode:    core1_0.CullModeBack,
-		FrontFace:   core1_0.FrontFaceClockwise,
+		FrontFace:   core1_0.FrontFaceCounterClockwise,
 
 		DepthBiasEnable: false,
 
@@ -913,9 +937,6 @@ func (app *HelloTriangleApplication) createGraphicsPipeline() error {
 			app.descriptorSetLayout,
 		},
 	})
-	if err != nil {
-		return err
-	}
 
 	pipelines, _, err := app.device.CreateGraphicsPipelines(nil, nil, []core1_0.GraphicsPipelineCreateInfo{
 		{
@@ -1076,6 +1097,61 @@ func (app *HelloTriangleApplication) createUniformBuffers() error {
 	return nil
 }
 
+func (app *HelloTriangleApplication) createDescriptorPool() error {
+	var err error
+	app.descriptorPool, _, err = app.device.CreateDescriptorPool(nil, core1_0.DescriptorPoolCreateInfo{
+		MaxSets: len(app.swapchainImages),
+		PoolSizes: []core1_0.DescriptorPoolSize{
+			{
+				Type:            core1_0.DescriptorTypeUniformBuffer,
+				DescriptorCount: len(app.swapchainImages),
+			},
+		},
+	})
+	return err
+}
+
+func (app *HelloTriangleApplication) createDescriptorSets() error {
+	var allocLayouts []core1_0.DescriptorSetLayout
+	for i := 0; i < len(app.swapchainImages); i++ {
+		allocLayouts = append(allocLayouts, app.descriptorSetLayout)
+	}
+
+	var err error
+	app.descriptorSets, _, err = app.device.AllocateDescriptorSets(core1_0.DescriptorSetAllocateInfo{
+		DescriptorPool: app.descriptorPool,
+		SetLayouts:     allocLayouts,
+	})
+	if err != nil {
+		return err
+	}
+
+	for i := 0; i < len(app.swapchainImages); i++ {
+		err = app.device.UpdateDescriptorSets([]core1_0.WriteDescriptorSet{
+			{
+				DstSet:          app.descriptorSets[i],
+				DstBinding:      0,
+				DstArrayElement: 0,
+
+				DescriptorType: core1_0.DescriptorTypeUniformBuffer,
+
+				BufferInfo: []core1_0.DescriptorBufferInfo{
+					{
+						Buffer: app.uniformBuffers[i],
+						Offset: 0,
+						Range:  int(unsafe.Sizeof(UniformBufferObject{})),
+					},
+				},
+			},
+		}, nil)
+		if err != nil {
+			return err
+		}
+	}
+
+	return nil
+}
+
 func (app *HelloTriangleApplication) createBuffer(size int, usage core1_0.BufferUsageFlags, properties core1_0.MemoryPropertyFlags) (core1_0.Buffer, core1_0.DeviceMemory, error) {
 	buffer, _, err := app.device.CreateBuffer(nil, core1_0.BufferCreateInfo{
 		Size:        size,
@@ -1199,6 +1275,9 @@ func (app *HelloTriangleApplication) createCommandBuffers() error {
 		buffer.CmdBindPipeline(core1_0.PipelineBindPointGraphics, app.graphicsPipeline)
 		buffer.CmdBindVertexBuffers(0, []core1_0.Buffer{app.vertexBuffer}, []int{0})
 		buffer.CmdBindIndexBuffer(app.indexBuffer, 0, core1_0.IndexTypeUInt16)
+		buffer.CmdBindDescriptorSets(core1_0.PipelineBindPointGraphics, app.pipelineLayout, 0, []core1_0.DescriptorSet{
+			app.descriptorSets[bufferIdx],
+		}, nil)
 		buffer.CmdDrawIndexed(len(indices), 1, 0, 0, 0)
 		buffer.CmdEndRenderPass()
 
