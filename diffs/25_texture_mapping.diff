diff --git a/../steps/24_sampler/main.go b/../steps/25_texture_mapping/main.go
index f1f0d5a..ef55839 100644
--- a/../steps/24_sampler/main.go
+++ b/../steps/25_texture_mapping/main.go
@@ -51,6 +51,7 @@ type SwapChainSupportDetails struct {
 type Vertex struct {
 	Position vkngmath.Vec2[float32]
 	Color    vkngmath.Vec3[float32]
+	TexCoord vkngmath.Vec2[float32]
 }
 
 type UniformBufferObject struct {
@@ -85,14 +86,20 @@ func getVertexAttributeDescriptions() []core1_0.VertexInputAttributeDescription
 			Format:   core1_0.FormatR32G32B32SignedFloat,
 			Offset:   int(unsafe.Offsetof(v.Color)),
 		},
+		{
+			Binding:  0,
+			Location: 2,
+			Format:   core1_0.FormatR32G32SignedFloat,
+			Offset:   int(unsafe.Offsetof(v.TexCoord)),
+		},
 	}
 }
 
 var vertices = []Vertex{
-	{Position: vkngmath.Vec2[float32]{X: -0.5, Y: -0.5}, Color: vkngmath.Vec3[float32]{X: 1, Y: 0, Z: 0}},
-	{Position: vkngmath.Vec2[float32]{X: 0.5, Y: -0.5}, Color: vkngmath.Vec3[float32]{X: 0, Y: 1, Z: 0}},
-	{Position: vkngmath.Vec2[float32]{X: 0.5, Y: 0.5}, Color: vkngmath.Vec3[float32]{X: 0, Y: 0, Z: 1}},
-	{Position: vkngmath.Vec2[float32]{X: -0.5, Y: 0.5}, Color: vkngmath.Vec3[float32]{X: 1, Y: 1, Z: 1}},
+	{Position: vkngmath.Vec2[float32]{X: -0.5, Y: -0.5}, Color: vkngmath.Vec3[float32]{X: 1, Y: 0, Z: 0}, TexCoord: vkngmath.Vec2[float32]{X: 1, Y: 0}},
+	{Position: vkngmath.Vec2[float32]{X: 0.5, Y: -0.5}, Color: vkngmath.Vec3[float32]{X: 0, Y: 1, Z: 0}, TexCoord: vkngmath.Vec2[float32]{X: 0, Y: 0}},
+	{Position: vkngmath.Vec2[float32]{X: 0.5, Y: 0.5}, Color: vkngmath.Vec3[float32]{X: 0, Y: 0, Z: 1}, TexCoord: vkngmath.Vec2[float32]{X: 0, Y: 1}},
+	{Position: vkngmath.Vec2[float32]{X: -0.5, Y: 0.5}, Color: vkngmath.Vec3[float32]{X: 1, Y: 1, Z: 1}, TexCoord: vkngmath.Vec2[float32]{X: 1, Y: 1}},
 }
 
 var indices = []uint16{0, 1, 2, 2, 3, 0}
@@ -829,6 +836,13 @@ func (app *HelloTriangleApplication) createDescriptorSetLayout() error {
 
 				StageFlags: core1_0.StageVertex,
 			},
+			{
+				Binding:         1,
+				DescriptorType:  core1_0.DescriptorTypeCombinedImageSampler,
+				DescriptorCount: 1,
+
+				StageFlags: core1_0.StageFragment,
+			},
 		},
 	})
 	if err != nil {
@@ -1351,6 +1365,10 @@ func (app *HelloTriangleApplication) createDescriptorPool() error {
 				Type:            core1_0.DescriptorTypeUniformBuffer,
 				DescriptorCount: len(app.swapchainImages),
 			},
+			{
+				Type:            core1_0.DescriptorTypeCombinedImageSampler,
+				DescriptorCount: len(app.swapchainImages),
+			},
 		},
 	})
 	return err
@@ -1388,6 +1406,21 @@ func (app *HelloTriangleApplication) createDescriptorSets() error {
 					},
 				},
 			},
+			{
+				DstSet:          app.descriptorSets[i],
+				DstBinding:      1,
+				DstArrayElement: 0,
+
+				DescriptorType: core1_0.DescriptorTypeCombinedImageSampler,
+
+				ImageInfo: []core1_0.DescriptorImageInfo{
+					{
+						ImageView:   app.textureImageView,
+						Sampler:     app.textureSampler,
+						ImageLayout: core1_0.ImageLayoutShaderReadOnlyOptimal,
+					},
+				},
+			},
 		}, nil)
 		if err != nil {
 			return err
